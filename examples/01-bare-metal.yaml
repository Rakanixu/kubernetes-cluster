apiVersion: v1
kind: List
items:
  - apiVersion: apps/v1 
    kind: Deployment
    metadata:
      name: nats-deployment
    spec:
      selector:
        matchLabels:
          app: nats
      replicas: 1     
      template: 
        metadata:
          labels:
            app: nats
        spec:
          containers:
          - name: nats
            image: nats:latest
            args: ["-D", "-m", "8222"]
            ports:
            - name: client
              containerPort: 4222
            - name: server
              containerPort: 6222  
            - name: monitor  
              containerPort: 8222
  - apiVersion: v1
    kind: Service
    metadata:
      name: nats
      labels:
        app: nats
    spec:
      selector:
        app: nats
      type: NodePort  
      ports:
      - name: client
        protocol: TCP
        port: 4222
        targetPort: client
      - name: monitor
        protocol: TCP
        port: 8222
        targetPort: monitor

  - apiVersion: apps/v1 
    kind: Deployment
    metadata:
      name: registry-deployment
    spec:
      selector:
        matchLabels:
          app: registry
      replicas: 1     
      template: 
        metadata:
          labels:
            app: registry
        spec:
          hostname: registry
          containers:
          - name: registry
            image: progrium/consul:latest
            args: ["-server", "-bootstrap", "-rejoin", "-log-level", "err"]
            ports:
            - name: tcp-rcp
              containerPort: 8300
            - name: http-api
              containerPort: 8500  
            - name: tcp-dns  
              containerPort: 8600
  - apiVersion: v1
    kind: Service
    metadata:
      name: registry
    spec:
      selector:
        app: registry
      ports:
      - name: tcp-rcp
        protocol: TCP
        port: 8300
        targetPort: tcp-rcp    
      - name: http-api
        protocol: TCP
        port: 8500
        targetPort: http-api
      - name: tcp-dns  
        protocol: TCP
        port: 8600
        targetPort: tcp-dns

  - apiVersion: apps/v1 
    kind: Deployment
    metadata:
      name: elasticsearch-deployment
    spec:
      selector:
        matchLabels:
          app: elasticsearch
      replicas: 1     
      template: 
        metadata:
          labels:
            app: elasticsearch
        spec:
          initContainers:
          - name: init-sysctl
            image: busybox
            imagePullPolicy: IfNotPresent
            command: ["sysctl", "-w", "vm.max_map_count=262144"]
            securityContext:
              privileged: true
          containers:
          - name: elasticsearch
            securityContext:
              privileged: true
              capabilities:
                add:
                  - IPC_LOCK
                  - SYS_RESOURCE
            env:
            - name: "xpack.security.enabled"
              value: "false"   
            image: docker.elastic.co/elasticsearch/elasticsearch:5.4.0
            ports:
            - name: http
              containerPort: 9200
            - name: transport
              containerPort: 9300  
  - apiVersion: v1
    kind: Service
    metadata:
      name: elasticsearch
    spec:
      selector:
        app: elasticsearch
      type: NodePort  
      ports:
      - name: http
        protocol: TCP
        port: 9200
        targetPort: http

  - apiVersion: apps/v1 
    kind: Deployment
    metadata:
      name: static-server-deployment
    spec:
      selector:
        matchLabels:
          app: static-server
      replicas: 1     
      template: 
        metadata:
          labels:
            app: static-server
        spec:
          hostname: static-server
          containers:
          - name: static-server
            image: rakanixu/go-micro-tech-talk-static-server
            ports:
            - name: http
              containerPort: 80
  - apiVersion: v1
    kind: Service
    metadata:
      name: static-server
    spec:
      selector:
        app: static-server
      ports:
      - name: http
        protocol: TCP
        port: 80
        targetPort: http              

  - apiVersion: apps/v1 
    kind: Deployment
    metadata:
      name: web-deployment
    spec:
      selector:
        matchLabels:
          app: web
      replicas: 1     
      template: 
        metadata:
          labels:
            app: web
        spec:
          containers:
          - name: web
            image: rakanixu/go-micro-tech-talk-micro
            args: [
              "--registry_address=registry:8500",
              "--register_interval=5",
              "--register_ttl=10",
              "--enable_stats=true",
              "--selector=cache",
              "--web_cors=*",
              "--broker=nats",
              "--broker_address=nats:4222",
              "--transport=tcp",
              "web" 
            ]
            ports:
            - name: http
              containerPort: 8082
  - apiVersion: v1
    kind: Service
    metadata:
      name: web
    spec:
      selector:
        app: web
      type: NodePort  
      ports:
      - name: http
        protocol: TCP
        port: 8082
        targetPort: http 

  - apiVersion: apps/v1 
    kind: Deployment
    metadata:
      name: api-deployment
    spec:
      selector:
        matchLabels:
          app: api
      replicas: 1     
      template: 
        metadata:
          labels:
            app: api
        spec:
          containers:
          - name: api
            image: rakanixu/go-micro-tech-talk-micro
            args: [
              "--registry_address=registry:8500",
              "--register_interval=5",
              "--register_ttl=10",
              "--api_namespace=com.go-micro-tech-talk.api",
              "--broker=nats",
              "--broker_address=nats:4222",
              "--transport=tcp",
              "api",
              "--handler=proxy"
            ]
            ports:
            - name: http
              containerPort: 8080
  - apiVersion: v1
    kind: Service
    metadata:
      name: api
    spec:
      selector:
        app: api
      type: NodePort  
      ports:
      - name: http
        protocol: TCP
        port: 8080
        targetPort: http

  - apiVersion: apps/v1 
    kind: Deployment
    metadata:
      name: flight-srv-deployment
    spec:
      selector:
        matchLabels:
          app: flight-srv
      replicas: 1     
      template: 
        metadata:
          labels:
            app: flight-srv
        spec:
          containers:
          - name: flight-srv
            image: rakanixu/go-micro-tech-talk-flight-srv
            args: [
              "--registry_address=registry:8500",
              "--server_address=0.0.0.0:9090",
              "--transport=tcp"
            ]
            env:
            - name: ELASTICSEARCH_URL
              value: "http://elasticsearch:9200"
            ports:
            - name: rpc
              containerPort: 9090
  - apiVersion: v1
    kind: Service
    metadata:
      name: flight-srv
    spec:
      selector:
        app: flight-srv
      ports:
      - name: rpc
        protocol: TCP
        port: 9090
        targetPort: rpc

  - apiVersion: apps/v1 
    kind: Deployment
    metadata:
      name: flight-api-deployment
    spec:
      selector:
        matchLabels:
          app: flight-api
      replicas: 1     
      template: 
        metadata:
          labels:
            app: flight-api
        spec:
          containers:
          - name: flight-api
            image: rakanixu/go-micro-tech-talk-flight-api
            args: [
              "--registry_address=registry:8500",
              "--server_address=0.0.0.0:9090",
              "--transport=tcp"
            ]
            env:
            - name: ELASTICSEARCH_URL
              value: "http://elasticsearch:9200"
            ports:
            - name: rpc
              containerPort: 9090
  - apiVersion: v1
    kind: Service
    metadata:
      name: flight-api
    spec:
      selector:
        app: flight-api
      ports:
      - name: rpc
        protocol: TCP
        port: 9090
        targetPort: rpc

  - apiVersion: apps/v1 
    kind: Deployment
    metadata:
      name: orchestrator-srv-deployment
    spec:
      selector:
        matchLabels:
          app: orchestrator-srv
      replicas: 1     
      template: 
        metadata:
          labels:
            app: orchestrator-srv
        spec:
          containers:
          - name: orchestrator-srv
            image: rakanixu/go-micro-tech-talk-orchestrator
            args: [
              "--registry_address=registry:8500",
              "--server_address=0.0.0.0:9090",
              "--broker=nats", 
              "--broker_address=nats:4222",
              "--transport=grpc"
            ]
            ports:
            - name: rpc
              containerPort: 9090
  - apiVersion: v1
    kind: Service
    metadata:
      name: orchestrator-srv
    spec:
      selector:
        app: orchestrator-srv
      ports:
      - name: rpc
        protocol: TCP
        port: 9090
        targetPort: rpc           
        
  - apiVersion: apps/v1 
    kind: Deployment
    metadata:
      name: indexer-srv-deployment
    spec:
      selector:
        matchLabels:
          app: indexer-srv
      replicas: 3     
      template: 
        metadata:
          labels:
            app: indexer-srv
        spec:
          containers:
          - name: indexer-srv
            image: rakanixu/go-micro-tech-talk-indexer-srv
            args: [
              "--registry_address=registry:8500",
              "--server_address=0.0.0.0:9090",
              "--broker=nats", 
              "--broker_address=nats:4222",
              "--transport=grpc"
            ]
            env:
            - name: ELASTICSEARCH_URL
              value: "http://elasticsearch:9200"
            ports:
            - name: rpc
              containerPort: 9090
  - apiVersion: v1
    kind: Service
    metadata:
      name: indexer-srv
    spec:
      selector:
        app: indexer-srv
      ports:
      - name: rpc
        protocol: TCP
        port: 9090
        targetPort: rpc              