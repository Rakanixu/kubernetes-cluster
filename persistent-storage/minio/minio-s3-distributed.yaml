apiVersion: v1
kind: Namespace
metadata:
  name: minio-distributed
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv01
spec:
  capacity:
    storage: 3Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: nfs
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: "/storage"
    server: "192.168.0.146"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv02
spec:
  capacity:
    storage: 3Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: nfs
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: "/storage"
    server: "192.168.0.146"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv03
spec:
  capacity:
    storage: 3Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: nfs
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: "/storage"
    server: "192.168.0.146"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv04
spec:
  capacity:
    storage: 3Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: nfs
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: "/storage"
    server: "192.168.0.146" 
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv05
spec:
  capacity:
    storage: 3Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: nfs
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: "/storage"
    server: "192.168.0.146"        
---
apiVersion: v1
kind: Service
metadata:
  namespace: minio-distributed
  name: minio
  labels:
    app: minio
spec:
  clusterIP: None
  ports:
    - port: 9000
      name: minio
  selector:
    app: minio
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: minio-distributed
  name: minio
  labels:
    app: minio
spec:
  serviceName: minio
  replicas: 4
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: nfs
                operator: In
                values:
                - mounted
      containers:
      - name: minio
        env:
        - name: MINIO_ACCESS_KEY
          value: "minio_admin"
        - name: MINIO_SECRET_KEY
          value: "minio123"
        image: minio/minio:latest
        args:
        - server
        - http://minio-0.minio.minio-distributed.svc.cluster.local/data
        - http://minio-1.minio.minio-distributed.svc.cluster.local/data
        - http://minio-2.minio.minio-distributed.svc.cluster.local/data
        - http://minio-3.minio.minio-distributed.svc.cluster.local/data
        ports:
        - containerPort: 9000
          hostPort: 9000
        # These volume mounts are persistent. Each pod in the Statefulset
        # gets a volume mounted based on this field.
        volumeMounts:
        - name: data
          mountPath: /storage
  # These are converted to volume claims by the controller
  # and mounted at the paths mentioned above.
  volumeClaimTemplates:
  - metadata:
      name: data
      namespace: minio-distributed
      annotations:
        volume.beta.kubernetes.io/storage-class: nfs
    spec:
      accessModes:
        - ReadWriteMany
      storageClassName: nfs
      resources:
        requests:
          storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: minio-distributed
spec:
  type: NodePort
  ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
  selector:
    app: minio